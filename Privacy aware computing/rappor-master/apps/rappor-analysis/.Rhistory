#90-10 split
split=0.80
trainIndex <- createDataPartition(mydata$Class, p=split, list=FALSE)
require(caret)
set.seed(100)
#90-10 split
split=0.80
trainIndex <- createDataPartition(mydata$Class, p=split, list=FALSE)
training <- mydata[ trainIndex,]
test <- mydata[-trainIndex,]
myModel <- Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat
model <- glm(myModel,family=binomial(link='logit'),data=training)
summary(model)
results <- predict(model,newdata=test,type='response')
results <- ifelse(results > 0.5,1,0)
#accuracy calculation
error <- mean(results != test$Class)
error
print(paste('Accuracy',1-error))
myModel <- Class ~ .
model <- glm(myModel,family=binomial(link='logit'),data=training)
summary(model)
results <- predict(model,newdata=test,type='response')
results <- ifelse(results > 0.5,1,0)
#accuracy calculation
error <- mean(results != test$Class)
error
print(paste('Accuracy',1-error))
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
fit1<- lm(Class ~ ., data=train)
summary(fit1)
breastcancer_rpart_tree<-rpart(myModel, data=training, method="class")
print(breastcancer_rpart_tree)
predSelector <- predict(breastcancer_rpart_tree,newdata=test,type="class")
table(predSelector,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector) != as.character(test$Class)))
breastcancer_rpart_tree<-rpart(Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat, data=training, method="class")
breastcancer_rpart_tree1<-rpart(Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat, data=training, method="class")
predSelector <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector,test$Class)
predSelector1 <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector1,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector1) != as.character(test$Class)))
mydata<-read.csv("/Users/meenakshinagarajan/Desktop/Neuroergonomics/breastcancer.csv", header=TRUE, sep=",")
head(mydata)
str(mydata)
mydata$deg.malig<-factor(mydata$deg.malig,levels=sort(unique(mydata$deg.malig)))
str(mydata)
mydata.chi <- t(round(cbind(apply(mydata, 2, function(x) {
ch <- chisq.test(mydata$Class, x)
c(unname(ch$statistic), ch$parameter, ch$p.value )})), 3))
mydata.chi
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
myModel <- Class ~ .
breastcancer_rpart_tree<-rpart(myModel, data=training, method="class")
print(breastcancer_rpart_tree)
predSelector <- predict(breastcancer_rpart_tree,newdata=test,type="class")
table(predSelector,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector) != as.character(test$Class)))
breastcancer_rpart_tree1<-rpart(Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat, data=training, method="class")
predSelector1 <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector1,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector1) != as.character(test$Class)))
mydata<-read.csv("/Users/meenakshinagarajan/Desktop/Neuroergonomics/breastcancer.csv", header=TRUE, sep=",")
head(mydata)
str(mydata)
mydata$deg.malig<-factor(mydata$deg.malig,levels=sort(unique(mydata$deg.malig)))
str(mydata)
mydata.chi <- t(round(cbind(apply(mydata, 2, function(x) {
ch <- chisq.test(mydata$Class, x)
c(unname(ch$statistic), ch$parameter, ch$p.value )})), 3))
mydata.chi
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
myModel <- Class ~ .
breastcancer_rpart_tree<-rpart(myModel, data=training, method="class")
mydata<-read.csv("/Users/meenakshinagarajan/Desktop/Neuroergonomics/breastcancer.csv", header=TRUE, sep=",")
head(mydata)
str(mydata)
mydata$deg.malig<-factor(mydata$deg.malig,levels=sort(unique(mydata$deg.malig)))
str(mydata)
mydata.chi <- t(round(cbind(apply(mydata, 2, function(x) {
ch <- chisq.test(mydata$Class, x)
c(unname(ch$statistic), ch$parameter, ch$p.value )})), 3))
mydata.chi
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
myModel <- Class ~ .
library(rpart)
breastcancer_rpart_tree<-rpart(myModel, data=training, method="class")
print(breastcancer_rpart_tree)
predSelector <- predict(breastcancer_rpart_tree,newdata=test,type="class")
table(predSelector,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector) != as.character(test$Class)))
myNewModel <- Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat
breastcancer_rpart_tree1<-rpart(myNewModel, data=training, method="class")
print(breastcancer_rpart_tree1)
predSelector1 <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector1,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector1) != as.character(test$Class)))
mydata<-read.csv("/Users/meenakshinagarajan/Desktop/Neuroergonomics/breastcancer.csv", header=TRUE, sep=",")
head(mydata)
str(mydata)
mydata$deg.malig<-factor(mydata$deg.malig,levels=sort(unique(mydata$deg.malig)))
str(mydata)
mydata.chi <- t(round(cbind(apply(mydata, 2, function(x) {
ch <- chisq.test(mydata$Class, x)
c(unname(ch$statistic), ch$parameter, ch$p.value )})), 3))
mydata.chi
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
myNewModel <- Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat
breastcancer_rpart_tree1<-rpart(myNewModel, data=training, method="class")
print(breastcancer_rpart_tree1)
predSelector1 <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector1,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector1) != as.character(test$Class)))
mydata<-read.csv("/Users/meenakshinagarajan/Desktop/Neuroergonomics/breastcancer.csv", header=TRUE, sep=",")
head(mydata)
str(mydata)
mydata$deg.malig<-factor(mydata$deg.malig,levels=sort(unique(mydata$deg.malig)))
str(mydata)
mydata.chi <- t(round(cbind(apply(mydata, 2, function(x) {
ch <- chisq.test(mydata$Class, x)
c(unname(ch$statistic), ch$parameter, ch$p.value )})), 3))
mydata.chi
## 75% of the sample size
smp_size <- floor(0.75 * nrow(mydata))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(mydata)), size = smp_size)
train <- mydata[train_ind, ]
test <- mydata[-train_ind, ]
myModel <- Class ~ .
library(rpart)
breastcancer_rpart_tree<-rpart(myModel, data=train, method="class")
print(breastcancer_rpart_tree)
predSelector <- predict(breastcancer_rpart_tree,newdata=test,type="class")
table(predSelector,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector) != as.character(test$Class)))
myNewModel <- Class ~ tumor.size+inv.nodes+node.caps+deg.malig+irradiat
breastcancer_rpart_tree1<-rpart(myNewModel, data=train, method="class")
print(breastcancer_rpart_tree1)
predSelector1 <- predict(breastcancer_rpart_tree1,newdata=test,type="class")
table(predSelector1,test$Class)
cat("MisClassification Error Rate:",mean(as.character(predSelector1) != as.character(test$Class)))
library(Matrix)
clear()
clear
cat("\014")
source.rappor <- function(rel_path)  {
abs_path <- paste0(Sys.getenv("RAPPOR_REPO", ""), rel_path)
source(abs_path)
}
source.rappor("analysis/R/util.R")  # for Log
ReadParameterFile <- function(params_file) {
# Read parameter file. Format:
# k, h, m, p, q, f
# 128, 2, 8, 0.5, 0.75, 0.75
params <- as.list(read.csv(params_file))
if (length(params) != 6) {
stop("There should be exactly 6 columns in the parameter file.")
}
if (any(names(params) != c("k", "h", "m", "p", "q", "f"))) {
stop("Parameter names must be k,h,m,p,q,f.")
}
params
}
# Handle the case of redundant cohorts, i.e. the counts file needs to be
# further aggregated to obtain counts for the number of cohorts specified in
# the params file.
#
# NOTE: Why is this happening?
AdjustCounts <- function(counts, params) {
apply(counts, 2, function(x) {
tapply(x, rep(1:params$m, nrow(counts) / params$m), sum)
})
}
setwd("~/Desktop/Privacy aware computing/rappor-master/analysis/R/)
""
setwd("~/Desktop/Privacy aware computing/rappor-master/analysis/R/")
setwd("~/Desktop/Privacy aware computing/rappor-master/analysis/R/")
ReadCountsFile <- function(counts_file, params, adjust_counts = FALSE) {
# Read in the counts file.
if (!file.exists(counts_file)) {
return(NULL)
}
counts <- read.csv(counts_file, header = FALSE)
if (adjust_counts) {
counts <- AdjustCounts(counts, params)
}
if (nrow(counts) != params$m) {
stop(sprintf("Got %d rows in the counts file, expected m = %d",
nrow(counts), params$m))
}
if ((ncol(counts) - 1) != params$k) {
stop(paste0("Counts file: number of columns should equal to k + 1: ",
ncol(counts)))
}
if (any(counts < 0)) {
stop("Counts file: all counts must be positive.")
}
# Turn counts from a data frame into a matrix.  (In R a data frame and matrix
# are sometimes interchangeable, but sometimes we need it to be matrix.)
as.matrix(counts)
}
ReadMapFile(map.csv)
read_input.R
read_input.R
cat("\014")
list.files
list.files(pattern=".r$")
list.files(pattern=".R$")
read_input.R
run read_input.R
load("~/Desktop/Privacy aware computing/rappor-master/analysis/R/")
load("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/map.csv")
setwd("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/map.csv")
setwd("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/")
setwd("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/map.csv")
setwd("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/")
load("~/Desktop/Privacy aware computing/rappor-master/apps/rappor-analysis/map.csv")
cat("\014")
source(abs_path)
source.rappor("~/Users/meenakshinagarajan/Desktop/Privacy aware computing/rappor-master/analysis/R/util.R")  # for Log
mental_health_data<-read.csv("/Users/meenakshinagarajan/Desktop/Privacy aware computing/survey.csv", header=TRUE, sep=",")
mental_health_data<-read.csv("/Users/meenakshinagarajan/Desktop/Privacy aware computing/survey.csv", header=TRUE, sep=",")
head(mental_health_data)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
head(newdata)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
newdata <- mydata[1:10,]
head(newdata)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
newdata <- mental_health_data[1:10,]
head(newdata)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
newdata <- newdata[1:10,]
head(newdata)
#Selecting observations where mental treatment is 'Yes'
treatment_data <- newdata[ which(treatment='Yes'),]
#Selecting observations where mental treatment is 'Yes'
treatment_data <- newdata[ which(treatment=='Yes'),]
#Selecting observations where mental treatment is 'Yes'
treatment_data <- newdata[ which(newdata$treatment=='Yes'),]
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[sample(1:nrow(newdata), 50,
replace=FALSE),]
head(mysample)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[sample(1:nrow(newdata), 10,
replace=FALSE),]
head(mysample)
#Selecting observations where mental treatment is 'Yes'
treatment_data <- mysample[ which(mysample$treatment=='Yes'),]
#Selecting observations where mental treatment is 'Yes'
treatment_data <- mysample[ which(mysample$treatment=='Yes'),]
nrow(treatment_data)
#Selecting observations where mental treatment is 'Yes'
treatment_data_yes <- mysample[ which(mysample$treatment=='Yes'),]
nrow(treatment_data_yes)
treatment_data_no <- mysample[ which(mysample$treatment=='No'),]
nrow(treatment_data_no)
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newsata[1:10,]
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[1:10,]
head(mysample)
#Selecting observations where mental treatment is 'Yes'
treatment_data_yes <- mysample[ which(mysample$treatment=='Yes'),]
nrow(treatment_data_yes)
treatment_data_no <- mysample[ which(mysample$treatment=='No'),]
nrow(treatment_data_no)
mynewsample <- newdata[10:20,]
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
nrow(mynewsample_yes)
mynewsample_no <- mynewsample[ which(mynewsample$treatment=='No'),]
nrow(mynewsample_no)
mynewsample <- newdata[11:20,]
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
nrow(mynewsample_yes)
mynewsample_no <- mynewsample[ which(mynewsample$treatment=='No'),]
nrow(mynewsample_no)
mynewsample <- newdata[21:30,]
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
nrow(mynewsample_yes)
mynewsample_no <- mynewsample[ which(mynewsample$treatment=='No'),]
nrow(mynewsample_no)
#Selecting observations where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
nrow(mysample_yes)
mysample_no <- mysample[ which(mysample$treatment=='No'),]
nrow(mysample_no)
mynewsample <- newdata[31:40,]
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
nrow(mynewsample_yes)
mynewsample_no <- mynewsample[ which(mynewsample$treatment=='No'),]
nrow(mynewsample_no)
mynewsample_yes[which(newsample$Gender='Female')]
mynewsample_yes[which(newsample$Gender=='Female')]
mynewsample_yes[which(mynewsample$Gender=='Female')]
mynewsample_yes[which(mynewsample_yes$Gender=='Female')]
mynewsample_yes[which(mynewsample_yes$Gender=='Female')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='Female')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='female')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='female'||mynewsample_yes$Gender=='F')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='female'|| mynewsample_yes$Gender=='F')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='female'|| mynewsample_yes$Gender=='F')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='male'|| mynewsample_yes$Gender=='F')]
mynewsample_yes
mynewsample_yes[which(mynewsample_yes$Gender=='female'|| mynewsample_yes$Gender=='F')]
mynewsample_yes
mynewsample_yes[ which(mynewsample_yes$Gender=='female'|| mynewsample_yes$Gender=='F'), ]
mynewsample_yes
mynewsample_yes[ which(mynewsample_yes$Gender=='female'), ]
#Selecting observations where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
nrow(mysample_yes)
mysample_yes
mysample_yes[ which(mysample_yes$Gender=='female'), ]
#Selecting observations where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
nrow(mysample_yes)
mysample_yes
mysample_yes[ which(mysample_yes$Gender=='Female'), ]
#Day 1 survey
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[11:20,]
head(mysample)
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answeres 'Yes'
mysample_yes[ which(mysample_yes$Gender=='Female'), ]
#Day 1 survey
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[11:20,]
head(mysample)
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
mysample_yes[ which(mysample_yes$Gender=='Female'), ]
mysample_yes
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
mysample_yes[ which(mysample_yes$Gender=='female'), ]
#Day 1 survey
myvars <- c("Age", "Gender", "Country","treatment")
newdata <- mental_health_data[myvars]
mysample <- newdata[11:20,]
head(mysample)
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
mysample_yes[ which(mysample_yes$Gender=='female'), ]
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
nrow(mynewsample_yes)
#Selecting observations from day 2 survey where mental treatment is 'Yes' an Gender is 'Female'
mynewsample_yes[ which(mynewsample_yes$Gender=='female'), ]
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey" nrow(mynewsample_yes))
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey" +nrow(mynewsample_yes))
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:") nrow(mynewsample_yes))
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:")
nrow(mynewsample_yes))
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:")
nrow(mynewsample_yes)
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:") nrow(mynewsample_yes)
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:"nrow(mynewsample_yes))
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
print("Number of persons who took the mental treatment in day 2 survey:")
nrow(mynewsample_yes)
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
mysample_yes[ which(mysample_yes$Gender=='female'), ]
print("Number of persons who took the mental treatment in day 1 survey and who are female:")
nrow(mynewsample_yes)
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
print("Number of females who took the mental treatment in day 1 survey and who are female:")
nrow(mysample_yes[ which(mysample_yes$Gender=='female'), ])
#Selecting observations from day 2 survey where mental treatment is 'Yes' an Gender is 'Female'
print("Number of females who took the mental treatment in day 2 survey:")
nrow(mynewsample_yes[ which(mynewsample_yes$Gender=='female'), ])
#Day 2 survey
mynewsample <- newdata[31:40,]
#Selecting observations from day 2 survey where mental treatment is 'Yes'
mynewsample_yes <- mynewsample[ which(mynewsample$treatment=='Yes'),]
#Selecting observations from day 1 survey where mental treatment is 'Yes'
mysample_yes <- mysample[ which(mysample$treatment=='Yes'),]
#number of female who answered 'Yes'
print("Number of females who took the mental treatment in day 1 survey:")
nrow(mysample_yes[ which(mysample_yes$Gender=='female'), ])
mynewsample_yes
nrow(mynewsample_yes[ which(mynewsample_yes$Age=='55'), ])
mysample
nrow(mysample[ which(mysample$Age=='55'), ])
mynewsample
nrow(mynewsample[ which(mynewsample$Age=='55'), ])
mynewsample
nrow(mynewsample[ which(mynewsample$Age=='50'), ])
mynewsample
nrow(mynewsample[ which(mynewsample$Age=='50'), ])
path<-file.path("/Users","meenakshinagarajan","Desktop","PhD","Sentimental Analysis/")
print(path)
path<-file.path("/Users","meenakshinagarajan","Desktop","PhD","Sentimental Analysis/")
print(path)
allfiles <- list.files(path)
print(allfiles)
for (i in 1:4){
print(allfiles[i])
files[i]<-paste(path,allfiles[i],sep="")
}
path<-file.path("/Users","meenakshinagarajan","Desktop","PhD","Sentimental Analysis/")
print(path)
allfiles <- list.files(path)
print(allfiles)
]
path<-file.path("/Users","meenakshinagarajan","Desktop","PhD","Sentimental Analysis/")
print(path)
allfiles <- list.files(path)
print(allfiles)
path<-file.path("/Users","meenakshinagarajan","Desktop","PhD","Sentimental Analysis/")
print(path)
allfiles <- list.files(path)
print(allfiles)
txt <- lapply(files, readLines)
